ProductUpdated
// Models/ProductModel.cs
// Models/ProductModel.cs
public class ProductModel
{
    public string Name { get; set; }
    public string Description { get; set; }
    public string ImageUrl { get; set; }
    public decimal Price { get; set; }
    public string CategoryId { get; set; }
}

// Models/CategoryModel.cs
public class CategoryModel
{
    public string Id { get; set; }
    public string Name { get; set; }
    public string Description { get; set; }
}

// Models/ProductPageModel.cs
public class ProductPageModel
{
    public List<CategoryModel> Categories { get; set; }
    public List<ProductModel> Products { get; set; }
}

// Controllers/ProductController.cs
// Controllers/ProductController.cs
public class ProductController : Controller
{
    public ActionResult Index(string categoryId = null)
    {
        var contextItem = Sitecore.Context.Item;
        var categories = contextItem.GetChildren()
                                    .Where(i => i.TemplateID == new TemplateID(new ID("{YOUR-CATEGORY-TEMPLATE-ID}")))
                                    .Select(category => new CategoryModel
                                    {
                                        Id = category.ID.ToString(),
                                        Name = category.Fields["Category Name"].Value,
                                        Description = category.Fields["Category Description"].Value
                                    }).ToList();

        var products = contextItem.Axes.GetDescendants()
                                       .Where(i => i.TemplateID == new TemplateID(new ID("{YOUR-PRODUCT-TEMPLATE-ID}")))
                                       .Select(product => new ProductModel
                                       {
                                           Name = product.Fields["Product Name"].Value,
                                           Description = product.Fields["Product Description"].Value,
                                           ImageUrl = Sitecore.Resources.Media.MediaManager.GetMediaUrl(product.Fields["Product Image"]),
                                           Price = decimal.Parse(product.Fields["Price"].Value),
                                           CategoryId = product.Fields["Category"].Value
                                       }).ToList();

        if (!string.IsNullOrEmpty(categoryId))
        {
            products = products.Where(p => p.CategoryId == categoryId).ToList();
        }

        var model = new ProductPageModel
        {
            Categories = categories,
            Products = products
        };
        return View(model);
    }
}

<!-- Views/Product/Index.cshtml -->
@model ProductPageModel

<div class="categories">
    <button onclick="filterProducts('')">All</button>
    @foreach (var category in Model.Categories)
    {
        <button onclick="filterProducts('@category.Id')">@category.Name</button>
    }
</div>

<div class="products row">
    @foreach (var product in Model.Products)
    {
        <div class="col-md-4 product-card" data-category="@product.CategoryId">
            <div class="card">
                <img src="@product.ImageUrl" class="card-img-top" alt="@product.Name">
                <div class="card-body">
                    <h5 class="card-title">@product.Name</h5>
                    <p class="card-text">@product.Description</p>
                    <p class="card-text">Price: @product.Price</p>
                </div>
            </div>
        </div>
    }
</div>

<script>
    function filterProducts(categoryId) {
        var url = '@Url.Action("Index", "Product")';
        if (categoryId) {
            url += '?categoryId=' + categoryId;
        }
        window.location.href = url;
    }
</script>
